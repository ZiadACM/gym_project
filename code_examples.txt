import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# --- Pandas (pd) - Data Manipulation and Analysis ---

# pd.read_csv(): Reads a CSV file into a Pandas DataFrame.
# Example: df = pd.read_csv('your_file.csv')

# df.head(): Returns the first n rows of the DataFrame.
# Example: print(df.head(5))

# df.info(): Prints a concise summary of the DataFrame, including data types and non-null values.
# Example: df.info()

# df.describe(): Generates descriptive statistics of numerical columns.
# Example: print(df.describe())

# df['column'].unique(): Returns an array of unique values in a Series (column).
# Example: print(df['Gender'].unique())

# df.isnull().sum(): Counts the number of missing (NaN/null) values in each column.
# Example: print(df.isnull().sum())

# df.duplicated().sum(): Counts the number of duplicate rows in the DataFrame.
# Example: print(df.duplicated().sum())

# df.drop_duplicates(): Removes duplicate rows from the DataFrame.
# Example: df.drop_duplicates(inplace=True)

# pd.to_numeric(): Converts arguments to a numeric type.
# Example: df['Numeric_Col'] = pd.to_numeric(df['String_Numeric_Col'], errors='coerce')

# pd.cut(): Bins values into discrete intervals (categories).
# Example: df['Age_Group'] = pd.cut(df['Age'], bins=[0, 18, 65, 100], labels=['Child', 'Adult', 'Senior'])

# df['column'].apply(function): Applies a function along an axis of the DataFrame or Series.
# Example: df['New_Category'] = df['Old_Column'].apply(lambda x: 'High' if x > 100 else 'Low')

# df.groupby('column')['agg_column'].mean(): Groups DataFrame rows and applies an aggregation function.
# Example: avg_sales_by_region = df.groupby('Region')['Sales'].mean()

# df.sort_values(by='column', ascending=False): Sorts a DataFrame or Series by one or more columns.
# Example: df_sorted = df.sort_values(by='Calories_Burned', ascending=False)

# df.select_dtypes(include=['float64', 'int64']).columns: Selects columns based on their data types.
# Example: numerical_cols = df.select_dtypes(include=['float64', 'int64']).columns

# df.corr(): Computes pairwise correlation of columns.
# Example: correlation_matrix = df[numerical_cols].corr()

# df.to_csv(): Writes the DataFrame to a CSV file.
# Example: df.to_csv('cleaned_data.csv', index=False)

# --- Matplotlib (plt) - Basic Plotting Foundation ---

# plt.figure(): Creates a new figure, or activates an existing figure.
# Example: plt.figure(figsize=(10, 6))

# plt.subplot(): Adds a subplot to the current figure.
# Example: plt.subplot(1, 2, 1) # 1 row, 2 columns, 1st plot

# plt.title(): Sets the title for the current subplot.
# Example: plt.title('My Plot Title')

# plt.xlabel() / plt.ylabel(): Sets the label for the x-axis / y-axis of the current subplot.
# Example: plt.xlabel('X-Axis Label')
# Example: plt.ylabel('Y-Axis Label')

# plt.xticks(): Gets or sets the properties of the x-axis ticks.
# Example: plt.xticks(rotation=45, ha='right')

# plt.tight_layout(): Automatically adjusts subplot parameters for a tight layout.
# Example: plt.tight_layout()

# plt.show(): Displays the current figure.
# Example: plt.show()

# --- Seaborn (sns) - Statistical Data Visualization ---

# sns.set_style(): Sets the aesthetic style of the plots.
# Example: sns.set_style("whitegrid")

# sns.histplot(): Plots a histogram, showing the distribution of a single numerical variable.
# Example: sns.histplot(data=df, x='Age', bins=10, kde=True)

# sns.countplot(): Shows the counts of observations in each category of a categorical variable.
# Example: sns.countplot(data=df, x='Gender', palette='viridis')

# sns.barplot(): Shows the relationship between a categorical variable and a numerical variable (often mean).
# Example: sns.barplot(data=df, x='Category', y='Value', estimator='mean')

# sns.scatterplot(): Plots data points on a two-dimensional graph, showing the relationship between two numerical variables.
# Example: sns.scatterplot(data=df, x='X_Value', y='Y_Value', hue='Category')

# sns.heatmap(): Plots rectangular data as a color-encoded matrix, typically used for correlation matrices.
# Example: sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')